{"version":3,"sources":["firebase.js","Components/admin/item.js","Components/admin/createauction.js","Components/admin/auctions.js","Components/Home.js","Components/user/viewauctions.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","web3","metaMaskAccount","ct","db","firestore","columns","name","selector","row","id","sortable","metadata","Item","useState","errormsg","setErrorMsg","dropdown","setDropdown","itemRows","setItemRows","useEffect","handleEthereum","a","ethereum","window","isMetaMask","console","log","detectEthereumProvider","Web3","enable","eth","getAccounts","net","getId","Contract","abi","methods","totalSupply","call","total","ItemOption","push","disabled","selected","value","items","k","tokenURI","href","target","owner","addEventListener","once","setTimeout","createItem","event","preventDefault","document","getElementById","mint","send","from","updateItem","updateITEM","create","formData","FormData","append","files","axios","post","then","res","path","data","filename","itemData","description","docRef","addDoc","collection","e","error","alert","className","onSubmit","placeholder","required","encType","type","pagination","fixedHeader","fixedHeaderScrollHeight","highlightOnHover","nftCt","CreateAuction","nftAbi","coinAbi","createAuction","itemId","minBidPrice","auctionEndDate","Math","floor","Date","valueOf","String","status","auctionBidPeriod","highestBid","highestBidder","Auctions","auctionRows","setAuctionRows","getc","indexforQuery","b","i","length","c","expiresAt","auctionEnd","toUTCString","Home","ViewAuctions","loadedItems","setLoadedItems","fetch","App","exact","element","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.cea221ec.chunk.js","sourcesContent":["import firebase from \"firebase/compat/app\";\r\nimport \"firebase/compat/firestore\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCYWaaVk6XSUwmX19gPFwHT0UkDfqqnlxQ\",\r\n\r\n  authDomain: \"dutchauction-83348.firebaseapp.com\",\r\n\r\n  projectId: \"dutchauction-83348\",\r\n\r\n  storageBucket: \"dutchauction-83348.appspot.com\",\r\n\r\n  messagingSenderId: \"834439245130\",\r\n\r\n  appId: \"1:834439245130:web:bc448b831ac07d5ece25b3\",\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n// const db = getFirestore();\r\n\r\nexport default firebase;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport abi from \"../abi/itemabi.json\";\r\nimport Web3 from \"web3\";\r\nimport detectEthereumProvider from \"@metamask/detect-provider\";\r\nimport MaterialStory from \"react-data-table-component\";\r\nimport axios from \"axios\";\r\n\r\nimport firebase from \"../../firebase.js\";\r\nimport { collection, addDoc } from \"firebase/firestore\";\r\nconst db = firebase.firestore();\r\n\r\nconst REACT_APP_CONTRACT_ADDRESS = \"0x1ecbBfa6F656FA4D1744fBF9353c53b1B09Ae8Eb\";\r\nconst SELECTEDNETWORK = \"80001\";\r\nconst SELECTEDNETWORKNAME = \"Polygon Testnet\";\r\n\r\nconst columns = [\r\n  {\r\n    name: \"Id\",\r\n    selector: (row) => row.id,\r\n    sortable: true,\r\n  },\r\n  {\r\n    name: \"Matadata\",\r\n    selector: (row) => row.metadata,\r\n  },\r\n];\r\n\r\nlet web3, metaMaskAccount, ct;\r\n\r\nexport default function Item() {\r\n  const [errormsg, setErrorMsg] = useState(false);\r\n  const [dropdown, setDropdown] = useState(0);\r\n  const [itemRows, setItemRows] = useState();\r\n\r\n  useEffect(async () => {\r\n    if (await detectEthereumProvider()) {\r\n      // setProvider(true);\r\n      window.web3 = new Web3(window.ethereum);\r\n      await window.ethereum.enable();\r\n      web3 = window.web3;\r\n\r\n      metaMaskAccount = await web3.eth.getAccounts();\r\n      metaMaskAccount = metaMaskAccount[0];\r\n\r\n      if ((await web3.eth.net.getId()) == SELECTEDNETWORK) {\r\n        ct = new web3.eth.Contract(abi, REACT_APP_CONTRACT_ADDRESS);\r\n        let total = await ct.methods.totalSupply().call();\r\n        let ItemOption = [];\r\n        ItemOption.push(\r\n          <option disabled selected value=\"\">\r\n            Select\r\n          </option>\r\n        );\r\n        let items = [];\r\n        for (let k = 1; k <= total; k++) {\r\n          ItemOption.push(\r\n            <option key={k} value={k}>\r\n              {k}\r\n            </option>\r\n          );\r\n          items.push({\r\n            id: k,\r\n            metadata: (\r\n              <a href={await ct.methods.tokenURI(k).call()} target=\"_blank\">\r\n                {await ct.methods.tokenURI(k).call()}\r\n              </a>\r\n            ),\r\n          });\r\n        }\r\n        setItemRows(items);\r\n        setDropdown(ItemOption);\r\n        // console.log(ct);\r\n\r\n        if ((await ct.methods.owner().call()) != metaMaskAccount)\r\n          setErrorMsg(\"Connect with owner wallet to continue\");\r\n      } else {\r\n        setErrorMsg(\r\n          'Select \"' +\r\n            SELECTEDNETWORKNAME +\r\n            '\" network in your wallet to buy the nft'\r\n        );\r\n      }\r\n    } else {\r\n      setErrorMsg(\r\n        \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\r\n      );\r\n      // setProvider(false);\r\n    }\r\n    if (window.ethereum) {\r\n      handleEthereum();\r\n    } else {\r\n      window.addEventListener(\"ethereum#initialized\", handleEthereum, {\r\n        once: true,\r\n      });\r\n      setTimeout(handleEthereum, 10000);\r\n    }\r\n\r\n    function handleEthereum() {\r\n      const { ethereum } = window;\r\n      if (ethereum && ethereum.isMetaMask) {\r\n        console.log(\"Ethereum successfully detected!\");\r\n        // setProvider(true);\r\n      } else {\r\n        setErrorMsg(\"Please install MetaMask!\");\r\n        // setProvider(false);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const createItem = async (event) => {\r\n    event.preventDefault();\r\n    let metadata = document.getElementById(\"itemMetadata\").value;\r\n\r\n    // ct = await new web3.eth.Contract(abi, REACT_APP_CONTRACT_ADDRESS);\r\n    await ct.methods.mint(metadata).send({ from: metaMaskAccount, value: 0 });\r\n  };\r\n\r\n  const updateItem = async (event) => {\r\n    event.preventDefault();\r\n    let metadata = document.getElementById(\"updateMetadata\").value;\r\n    let id = document.getElementById(\"itemId\").value;\r\n\r\n    await ct.methods\r\n      .updateITEM(id, metadata)\r\n      .send({ from: metaMaskAccount, value: 0 });\r\n  };\r\n\r\n  const create = async (event) => {\r\n    event.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append(\"image\", event.target[0].files[0]);\r\n\r\n    let path;\r\n    axios.post(\"/upload\", formData, {}).then((res) => {\r\n      path = res.data.filename;\r\n\r\n      console.log(res.data);\r\n\r\n      let itemData = {\r\n        path: path,\r\n        name: document.getElementById(\"itemName\").value,\r\n        description: document.getElementById(\"itemDescription\").value,\r\n      };\r\n\r\n      try {\r\n        const docRef = addDoc(collection(db, \"items\"), itemData);\r\n        console.log(\"Document written with ID: \", docRef.id);\r\n      } catch (e) {\r\n        console.error(\"Error adding document: \", e);\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!errormsg ? (\r\n        <div className=\"container\">\r\n          <div className=\"row py-5\">\r\n            <div className=\"col-md-5\">\r\n              <form onSubmit={createItem}>\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">Create Item</label>\r\n                  <input\r\n                    placeholder=\"Item Metadata ipfs://\"\r\n                    className=\"form-control\"\r\n                    required\r\n                    id=\"itemMetadata\"\r\n                  />\r\n                </div>\r\n                <button className=\"btn btn-primary\">Submit</button>\r\n              </form>\r\n              <br />\r\n              <form onSubmit={updateItem}>\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">Update Item</label>\r\n                  <select\r\n                    placeholder=\"Item id\"\r\n                    className=\"form-control\"\r\n                    required\r\n                    id=\"itemId\"\r\n                  >\r\n                    {dropdown}\r\n                  </select>\r\n                  <input\r\n                    placeholder=\"Item Metadata ipfs://\"\r\n                    className=\"form-control\"\r\n                    required\r\n                    id=\"updateMetadata\"\r\n                  />\r\n                </div>\r\n                <button\r\n                  // type=\"button\"\r\n                  className=\"btn btn-primary\"\r\n                >\r\n                  Submit\r\n                </button>\r\n              </form>\r\n              <hr></hr>\r\n              <form onSubmit={create} encType=\"multipart/form-data\">\r\n                <label className=\"form-label\">Create Item</label> <br />\r\n                <input type=\"file\" id=\"itemImage\" name=\"image\" />\r\n                <input\r\n                  placeholder=\"Name\"\r\n                  className=\"form-control\"\r\n                  required\r\n                  id=\"itemName\"\r\n                />\r\n                <input\r\n                  placeholder=\"Description\"\r\n                  className=\"form-control\"\r\n                  required\r\n                  id=\"itemDescription\"\r\n                />\r\n                <button className=\"btn btn-primary\">Submit</button>\r\n              </form>\r\n            </div>\r\n            <div className=\"col-md-7\">\r\n              <label>Items</label>\r\n              <MaterialStory\r\n                columns={columns}\r\n                data={itemRows}\r\n                pagination\r\n                fixedHeader\r\n                fixedHeaderScrollHeight=\"300px\"\r\n                highlightOnHover\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        alert(errormsg)\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport abi from \"../abi/auctionabi.json\";\r\nimport nftAbi from \"../abi/itemabi.json\";\r\nimport coinAbi from \"../abi/coinabi.json\";\r\nimport Web3 from \"web3\";\r\nimport detectEthereumProvider from \"@metamask/detect-provider\";\r\n\r\nconst REACT_APP_CONTRACT_ADDRESS = \"0xDEDfb6398DB752cB991905be918412d7C5F25f1c\";\r\nconst nftContractAddress = \"0x95085af0eae3f64786b695c172afed8819bdc22c\";\r\nconst coinContractAddress = \"0x2a1f1d742e60c20dcc4e6e02d52c41243b4076cc\";\r\nconst SELECTEDNETWORK = \"80001\";\r\nconst SELECTEDNETWORKNAME = \"Polygon Testnet\";\r\n\r\nlet web3, metaMaskAccount, ct, nftCt, coinCt;\r\n\r\nexport default function CreateAuction() {\r\n  const [errormsg, setErrorMsg] = useState(false);\r\n  const [dropdown, setDropdown] = useState(0);\r\n\r\n  useEffect(async () => {\r\n    if (await detectEthereumProvider()) {\r\n      // setProvider(true);\r\n      window.web3 = new Web3(window.ethereum);\r\n      await window.ethereum.enable();\r\n      web3 = window.web3;\r\n\r\n      metaMaskAccount = await web3.eth.getAccounts();\r\n      metaMaskAccount = metaMaskAccount[0];\r\n\r\n      if ((await web3.eth.net.getId()) == SELECTEDNETWORK) {\r\n        ct = await new web3.eth.Contract(abi, REACT_APP_CONTRACT_ADDRESS);\r\n        nftCt = await new web3.eth.Contract(nftAbi, nftContractAddress);\r\n        coinCt = await new web3.eth.Contract(coinAbi, coinContractAddress);\r\n\r\n        let total = await nftCt.methods.totalSupply().call();\r\n        let ItemOption = [];\r\n\r\n        ItemOption.push(\r\n          <option disabled selected value=\"\">\r\n            Select NFT Id\r\n          </option>\r\n        );\r\n\r\n        for (let k = 1; k <= total; k++) {\r\n          ItemOption.push(\r\n            <option key={k} value={k}>\r\n              {k}\r\n            </option>\r\n          );\r\n        }\r\n        setDropdown(ItemOption);\r\n        if ((await nftCt.methods.owner().call()) != metaMaskAccount)\r\n          setErrorMsg(\"Connect with owner wallet to continue\");\r\n      } else {\r\n        setErrorMsg('Select \"' + SELECTEDNETWORKNAME + '\" network to continue');\r\n      }\r\n    } else {\r\n      setErrorMsg(\r\n        \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\r\n      );\r\n      // setProvider(false);\r\n    }\r\n    if (window.ethereum) {\r\n      handleEthereum();\r\n    } else {\r\n      window.addEventListener(\"ethereum#initialized\", handleEthereum, {\r\n        once: true,\r\n      });\r\n      setTimeout(handleEthereum, 10000);\r\n    }\r\n\r\n    function handleEthereum() {\r\n      const { ethereum } = window;\r\n      if (ethereum && ethereum.isMetaMask) {\r\n        console.log(\"Ethereum successfully detected!\");\r\n        // setProvider(true);\r\n      } else {\r\n        setErrorMsg(\"Please install MetaMask!\");\r\n        // setProvider(false);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const createAuction = async (event) => {\r\n    event.preventDefault();\r\n    let itemId = document.getElementById(\"itemId\").value;\r\n    let minBidPrice = document.getElementById(\"minBidPrice\").value;\r\n    let auctionEndDate = document.getElementById(\"auctionEndDate\").value;\r\n    auctionEndDate = Math.floor(new Date(auctionEndDate).valueOf() / 1000);\r\n    console.log(auctionEndDate);\r\n    await ct.methods\r\n      .createAuction(\r\n        String(itemId),\r\n        String(minBidPrice),\r\n        String(auctionEndDate)\r\n      )\r\n      .send({ from: metaMaskAccount });\r\n  };\r\n\r\n  // const updateItem = async (event) => {\r\n  //   event.preventDefault();\r\n  //   let metadata = document.getElementById(\"updateMetadata\").value;\r\n  //   let id = document.getElementById(\"itemId\").value;\r\n\r\n  //   await ct.methods\r\n  //     .updateITEM(id, metadata)\r\n  //     .send({ from: metaMaskAccount, value: 0 });\r\n  // };\r\n\r\n  return (\r\n    <>\r\n      {!errormsg ? (\r\n        <div className=\"container\">\r\n          <div className=\"row py-5\">\r\n            <div className=\"col-6\">\r\n              <form onSubmit={createAuction}>\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">Create an Auction</label>\r\n                  <select\r\n                    placeholder=\"Item id\"\r\n                    className=\"form-control\"\r\n                    required\r\n                    id=\"itemId\"\r\n                  >\r\n                    {dropdown}\r\n                  </select>\r\n                  <input\r\n                    placeholder=\"Minimum Bid Price\"\r\n                    className=\"form-control\"\r\n                    required\r\n                    id=\"minBidPrice\"\r\n                    type=\"number\"\r\n                  />\r\n                  <input\r\n                    placeholder=\"Auction End Date\"\r\n                    className=\"form-control\"\r\n                    required\r\n                    id=\"auctionEndDate\"\r\n                    type=\"date\"\r\n                  />\r\n                </div>\r\n                <button className=\"btn btn-primary\">Submit</button>\r\n              </form>\r\n            </div>\r\n            <div className=\"col-6\">\r\n              {/* <form onSubmit={updateItem}>\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">Update Item</label>\r\n                  <select\r\n                    placeholder=\"Item id\"\r\n                    className=\"form-control\"\r\n                    required\r\n                    id=\"itemId\"\r\n                  >\r\n                    {dropdown}\r\n                  </select>\r\n                  <input\r\n                    placeholder=\"Item Metadata ipfs://\"\r\n                    className=\"form-control\"\r\n                    required\r\n                    id=\"updateMetadata\"\r\n                  />\r\n                </div>\r\n                <button\r\n                  // type=\"button\"\r\n                  className=\"btn btn-primary\"\r\n                >\r\n                  Submit\r\n                </button>\r\n              </form> */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        alert(errormsg)\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import \"./Auctions.css\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport abi from \"../abi/auctionabi.json\";\r\nimport nftAbi from \"../abi/itemabi.json\";\r\nimport coinAbi from \"../abi/coinabi.json\";\r\nimport Web3 from \"web3\";\r\nimport detectEthereumProvider from \"@metamask/detect-provider\";\r\nimport DataTable from \"react-data-table-component\";\r\n\r\nconst REACT_APP_CONTRACT_ADDRESS = \"0xDEDfb6398DB752cB991905be918412d7C5F25f1c\";\r\nconst nftContractAddress = \"0x1ecbBfa6F656FA4D1744fBF9353c53b1B09Ae8Eb\";\r\nconst coinContractAddress = \"0x8415Ea4719b7e0CAc256Cf66B076930E2cEA970B\";\r\nconst SELECTEDNETWORK = \"80001\";\r\nconst SELECTEDNETWORKNAME = \"Polygon Testnet\";\r\n\r\nlet web3, metaMaskAccount, ct, nftCt, coinCt;\r\n\r\nconst columns = [\r\n  {\r\n    name: \"Id\",\r\n    selector: (row) => row.id,\r\n    sortable: true,\r\n  },\r\n  {\r\n    name: \"Status\",\r\n    selector: (row) => row.status,\r\n  },\r\n  {\r\n    name: \"Bid Period\",\r\n    selector: (row) => row.auctionBidPeriod,\r\n  },\r\n  {\r\n    name: \"Highest Bid\",\r\n    selector: (row) => row.highestBid,\r\n  },\r\n  {\r\n    name: \"Highest Bidder\",\r\n    selector: (row) => row.highestBidder,\r\n  },\r\n];\r\n\r\nexport default function Auctions() {\r\n  const [errormsg, setErrorMsg] = useState(false);\r\n  const [dropdown, setDropdown] = useState(0);\r\n  const [auctionRows, setAuctionRows] = useState();\r\n\r\n  useEffect(async () => {\r\n    if (await detectEthereumProvider()) {\r\n      window.web3 = new Web3(window.ethereum);\r\n      await window.ethereum.enable();\r\n      web3 = window.web3;\r\n\r\n      metaMaskAccount = await web3.eth.getAccounts();\r\n      metaMaskAccount = metaMaskAccount[0];\r\n\r\n      if ((await web3.eth.net.getId()) == SELECTEDNETWORK) {\r\n        ct = await new web3.eth.Contract(abi, REACT_APP_CONTRACT_ADDRESS);\r\n        nftCt = await new web3.eth.Contract(nftAbi, nftContractAddress);\r\n        coinCt = await new web3.eth.Contract(coinAbi, coinContractAddress);\r\n\r\n        if ((await nftCt.methods.owner().call()) != metaMaskAccount)\r\n          setErrorMsg(\"Connect with owner wallet to continue\");\r\n\r\n        let indexforQuery = await ct.methods.getc().call();\r\n        let a = [];\r\n        let b = [];\r\n\r\n        for (let i = 0; i < indexforQuery.length; i++) {\r\n          a.push(await ct.methods.Auctions(indexforQuery[i]).call());\r\n          let c = new Date(a[i].expiresAt * 1000);\r\n          b.push({\r\n            id: indexforQuery[i],\r\n            status: a[i].auctionEnd ? \"Active\" : \"Ended\",\r\n            auctionBidPeriod: c.toUTCString(),\r\n            highestBid: a[i].highestBid,\r\n            highestBidder: a[i].highestBidder,\r\n          });\r\n          setAuctionRows(b);\r\n        }\r\n        setAuctionRows(b);\r\n      } else {\r\n        setErrorMsg('Select \"' + SELECTEDNETWORKNAME + '\" network to continue');\r\n      }\r\n    } else {\r\n      setErrorMsg(\r\n        \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\r\n      );\r\n      // setProvider(false);\r\n    }\r\n    if (window.ethereum) {\r\n      handleEthereum();\r\n    } else {\r\n      window.addEventListener(\"ethereum#initialized\", handleEthereum, {\r\n        once: true,\r\n      });\r\n      setTimeout(handleEthereum, 10000);\r\n    }\r\n\r\n    function handleEthereum() {\r\n      const { ethereum } = window;\r\n      if (ethereum && ethereum.isMetaMask) {\r\n        console.log(\"Ethereum successfully detected!\");\r\n        // setProvider(true);\r\n      } else {\r\n        setErrorMsg(\"Please install MetaMask!\");\r\n        // setProvider(false);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-12\">\r\n          <h3 className=\"py-3\">Overview</h3>\r\n          <div className=\"tableDiv\">\r\n            {/* <table id=\"myTable\" class=\"display \">\r\n              <thead>\r\n                <tr>\r\n                  <th>Id</th>\r\n                  <th>Name</th>\r\n                  <th>Highest Bid</th>\r\n                  <th>End Date</th>\r\n                  <th>Highest Bid Address</th>\r\n                  <th>Status</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>{auctionRows}</tbody>\r\n            </table> */}\r\n            <DataTable\r\n              columns={columns}\r\n              data={auctionRows}\r\n              pagination\r\n              fixedHeader\r\n              fixedHeaderScrollHeight=\"300px\"\r\n              highlightOnHover\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n// import Mintbtn from \"./mintbtn\";\r\n\r\nexport default function Home() {\r\n  return <h1>Home</h1>;\r\n}\r\n","import \"./viewauctions.css\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport abi from \"../abi/auctionabi.json\";\r\nimport nftAbi from \"../abi/itemabi.json\";\r\nimport coinAbi from \"../abi/coinabi.json\";\r\nimport Web3 from \"web3\";\r\nimport detectEthereumProvider from \"@metamask/detect-provider\";\r\nimport DataTable from \"react-data-table-component\";\r\n\r\nconst REACT_APP_CONTRACT_ADDRESS = \"0xDEDfb6398DB752cB991905be918412d7C5F25f1c\";\r\nconst nftContractAddress = \"0x1ecbBfa6F656FA4D1744fBF9353c53b1B09Ae8Eb\";\r\nconst coinContractAddress = \"0x8415Ea4719b7e0CAc256Cf66B076930E2cEA970B\";\r\nconst SELECTEDNETWORK = \"80001\";\r\nconst SELECTEDNETWORKNAME = \"Polygon Testnet\";\r\n\r\nlet web3, metaMaskAccount, ct, nftCt, coinCt;\r\n\r\nexport default function ViewAuctions() {\r\n  const [errormsg, setErrorMsg] = useState(false);\r\n  const [loadedItems, setLoadedItems] = useState();\r\n\r\n  useEffect(async () => {\r\n    if (await detectEthereumProvider()) {\r\n      window.web3 = new Web3(window.ethereum);\r\n      await window.ethereum.enable();\r\n      web3 = window.web3;\r\n\r\n      metaMaskAccount = await web3.eth.getAccounts();\r\n      metaMaskAccount = metaMaskAccount[0];\r\n\r\n      if ((await web3.eth.net.getId()) == SELECTEDNETWORK) {\r\n        ct = await new web3.eth.Contract(abi, REACT_APP_CONTRACT_ADDRESS);\r\n        nftCt = await new web3.eth.Contract(nftAbi, nftContractAddress);\r\n        // coinCt = await new web3.eth.Contract(coinAbi, coinContractAddress);\r\n\r\n        if ((await nftCt.methods.owner().call()) != metaMaskAccount)\r\n          setErrorMsg(\"Connect with owner wallet to continue\");\r\n\r\n        let indexforQuery = await ct.methods.getc().call();\r\n        let a = [];\r\n        let b = [];\r\n\r\n        for (let i = 0; i < indexforQuery.length; i++) {\r\n          a.push(await ct.methods.Auctions(indexforQuery[i]).call());\r\n          //   let c = new Date(a[i].expiresAt * 1000);\r\n          b.push(<div className=\"col-md-4\"></div>);\r\n          console.log(\r\n            fetch(await nftCt.methods.tokenURI(indexforQuery[i]).call())\r\n          );\r\n          setLoadedItems(b);\r\n        }\r\n        setLoadedItems(b);\r\n      } else {\r\n        setErrorMsg('Select \"' + SELECTEDNETWORKNAME + '\" network to continue');\r\n      }\r\n    } else {\r\n      setErrorMsg(\r\n        \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\r\n      );\r\n      // setProvider(false);\r\n    }\r\n    if (window.ethereum) {\r\n      handleEthereum();\r\n    } else {\r\n      window.addEventListener(\"ethereum#initialized\", handleEthereum, {\r\n        once: true,\r\n      });\r\n      setTimeout(handleEthereum, 10000);\r\n    }\r\n\r\n    function handleEthereum() {\r\n      const { ethereum } = window;\r\n      if (ethereum && ethereum.isMetaMask) {\r\n        console.log(\"Ethereum successfully detected!\");\r\n        // setProvider(true);\r\n      } else {\r\n        setErrorMsg(\"Please install MetaMask!\");\r\n        // setProvider(false);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-12\">\r\n          <h3 className=\"py-3\">Overview</h3>\r\n          <div className=\"row\">{loadedItems}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import \"./App.css\";\r\nimport Item from \"./Components/admin/item\";\r\nimport CreateAuction from \"./Components/admin/createauction\";\r\nimport Auction from \"./Components/admin/auctions\";\r\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\r\nimport Home from \"./Components/Home\";\r\nimport ViewAuctions from \"./Components/user/viewauctions\";\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <a href=\"/\">Home</a> &nbsp;\r\n        <a href=\"/items\">Items</a> &nbsp;\r\n        <a href=\"/auctions\">Auctions</a> &nbsp;\r\n        <a href=\"/createauctions\">Create Auctions</a> &nbsp;\r\n        <a href=\"/viewauctions\">View Auctions</a> &nbsp;\r\n      </div>\r\n      <BrowserRouter>\r\n        <Routes>\r\n          <Route exact path=\"/items\" element={<Item />} />\r\n          <Route exact path=\"/auctions\" element={<Auction />} />\r\n          <Route exact path=\"/createauctions\" element={<CreateAuction />} />\r\n          <Route exact path=\"/viewauctions\" element={<ViewAuctions />} />\r\n          <Route exact path=\"/\" element={<Home />} />\r\n        </Routes>\r\n      </BrowserRouter>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n// import \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}