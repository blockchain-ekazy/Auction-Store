{"version":3,"sources":["firebase.js","Components/admin/item.js","Components/admin/createauction.js","Components/admin/auctions.js","Components/Home.js","Components/user/viewauctions.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","web3","metaMaskAccount","ct","total","db","firestore","columns","name","selector","row","id","sortable","metadata","Item","useState","errormsg","setErrorMsg","dropdown","setDropdown","itemRows","setItemRows","loading","setLoading","useEffect","handleEthereum","a","ethereum","window","isMetaMask","console","log","detectEthereumProvider","Web3","enable","eth","getAccounts","net","getId","Contract","abi","methods","totalSupply","call","ItemOption","push","disabled","selected","value","items","k","tokenURI","href","target","owner","addEventListener","once","setTimeout","createItem","mint","send","from","updateItem","event","preventDefault","document","getElementById","updateITEM","create","formData","FormData","append","files","axios","post","then","res","itemData","path","data","filename","description","collection","doc","Number","toString","set","location","origin","alert","className","onSubmit","placeholder","required","encType","type","pagination","fixedHeader","fixedHeaderScrollHeight","highlightOnHover","src","nftCt","CreateAuction","nftAbi","coinAbi","createAuction","itemId","minBidPrice","auctionEndDate","Math","floor","Date","valueOf","String","status","auctionBidPeriod","highestBid","highestBidder","Auctions","auctionRows","setAuctionRows","getc","indexforQuery","b","i","length","c","expiresAt","auctionEnd","toUTCString","Home","ViewAuctions","loadedItems","setLoadedItems","fetch","App","exact","element","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.26c8d726.chunk.js","sourcesContent":["import firebase from \"firebase/compat/app\";\r\nimport \"firebase/compat/firestore\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCYWaaVk6XSUwmX19gPFwHT0UkDfqqnlxQ\",\r\n\r\n  authDomain: \"dutchauction-83348.firebaseapp.com\",\r\n\r\n  projectId: \"dutchauction-83348\",\r\n\r\n  storageBucket: \"dutchauction-83348.appspot.com\",\r\n\r\n  messagingSenderId: \"834439245130\",\r\n\r\n  appId: \"1:834439245130:web:bc448b831ac07d5ece25b3\",\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n// const db = getFirestore();\r\n\r\nexport default firebase;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport abi from \"../abi/itemabi.json\";\r\nimport Web3 from \"web3\";\r\nimport detectEthereumProvider from \"@metamask/detect-provider\";\r\nimport MaterialStory from \"react-data-table-component\";\r\nimport axios from \"axios\";\r\n\r\nimport firebase from \"../../firebase.js\";\r\n// import { collection, addDoc } from \"firebase/firestore\";\r\nconst db = firebase.firestore();\r\n\r\nconst REACT_APP_CONTRACT_ADDRESS = \"0xaE62E801988b3698c91FC39F95a68B9fb0AD4651\";\r\nconst SELECTEDNETWORK = \"80001\";\r\nconst SELECTEDNETWORKNAME = \"Polygon Testnet\";\r\n\r\nconst columns = [\r\n  {\r\n    name: \"Id\",\r\n    selector: (row) => row.id,\r\n    sortable: true,\r\n  },\r\n  {\r\n    name: \"Matadata\",\r\n    selector: (row) => row.metadata,\r\n  },\r\n];\r\n\r\nlet web3, metaMaskAccount, ct, total;\r\n\r\nexport default function Item() {\r\n  const [errormsg, setErrorMsg] = useState(false);\r\n  const [dropdown, setDropdown] = useState(0);\r\n  const [itemRows, setItemRows] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(async () => {\r\n    if (await detectEthereumProvider()) {\r\n      // setProvider(true);\r\n      window.web3 = new Web3(window.ethereum);\r\n      await window.ethereum.enable();\r\n      web3 = window.web3;\r\n\r\n      metaMaskAccount = await web3.eth.getAccounts();\r\n      metaMaskAccount = metaMaskAccount[0];\r\n\r\n      if ((await web3.eth.net.getId()) == SELECTEDNETWORK) {\r\n        ct = new web3.eth.Contract(abi, REACT_APP_CONTRACT_ADDRESS);\r\n        total = await ct.methods.totalSupply().call();\r\n        let ItemOption = [];\r\n        ItemOption.push(\r\n          <option disabled selected value=\"\">\r\n            Select\r\n          </option>\r\n        );\r\n        let items = [];\r\n        for (let k = 1; k <= total; k++) {\r\n          ItemOption.push(\r\n            <option key={k} value={k}>\r\n              {k}\r\n            </option>\r\n          );\r\n          items.push({\r\n            id: k,\r\n            metadata: (\r\n              <a href={await ct.methods.tokenURI(k).call()} target=\"_blank\">\r\n                {await ct.methods.tokenURI(k).call()}\r\n              </a>\r\n            ),\r\n          });\r\n        }\r\n        setItemRows(items);\r\n        setDropdown(ItemOption);\r\n        // console.log(ct);\r\n\r\n        if ((await ct.methods.owner().call()) != metaMaskAccount)\r\n          setErrorMsg(\"Connect with owner wallet to continue\");\r\n      } else {\r\n        setErrorMsg(\r\n          'Select \"' +\r\n            SELECTEDNETWORKNAME +\r\n            '\" network in your wallet to buy the nft'\r\n        );\r\n      }\r\n    } else {\r\n      setErrorMsg(\r\n        \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\r\n      );\r\n      // setProvider(false);\r\n    }\r\n    if (window.ethereum) {\r\n      handleEthereum();\r\n    } else {\r\n      window.addEventListener(\"ethereum#initialized\", handleEthereum, {\r\n        once: true,\r\n      });\r\n      setTimeout(handleEthereum, 10000);\r\n    }\r\n\r\n    function handleEthereum() {\r\n      const { ethereum } = window;\r\n      if (ethereum && ethereum.isMetaMask) {\r\n        console.log(\"Ethereum successfully detected!\");\r\n        // setProvider(true);\r\n      } else {\r\n        setErrorMsg(\"Please install MetaMask!\");\r\n        // setProvider(false);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const createItem = async (metadata) => {\r\n    await ct.methods.mint(metadata).send({ from: metaMaskAccount, value: 0 });\r\n  };\r\n\r\n  const updateItem = async (event) => {\r\n    event.preventDefault();\r\n    let metadata = document.getElementById(\"updateMetadata\").value;\r\n    let id = document.getElementById(\"itemId\").value;\r\n\r\n    await ct.methods\r\n      .updateITEM(id, metadata)\r\n      .send({ from: metaMaskAccount, value: 0 });\r\n  };\r\n\r\n  const create = async (event) => {\r\n    event.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append(\"image\", event.target[0].files[0]);\r\n\r\n    setLoading(true);\r\n\r\n    axios.post(\"http://localhost:8000/upload\", formData, {}).then((res) => {\r\n      console.log(\"Image upload success\");\r\n\r\n      let path = res.data.filename;\r\n\r\n      let itemData = {\r\n        path: path,\r\n        name: document.getElementById(\"itemName\").value,\r\n        description: document.getElementById(\"itemDescription\").value,\r\n      };\r\n\r\n      db.collection(\"items\")\r\n        .doc((Number(total) + 1).toString())\r\n        .set(itemData)\r\n        .then(() => {\r\n          console.log(\"Databse update success\");\r\n          createItem(\r\n            window.location.origin + \"/api/metadata/\" + (Number(total) + 1)\r\n          );\r\n          setLoading(false);\r\n        });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!errormsg ? (\r\n        <div className=\"container\">\r\n          <div className=\"row py-5\">\r\n            <div className=\"col-md-5\">\r\n              <form onSubmit={createItem}>\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">Create Item</label>\r\n                  <input\r\n                    placeholder=\"Item Metadata ipfs://\"\r\n                    className=\"form-control\"\r\n                    required\r\n                    id=\"itemMetadata\"\r\n                  />\r\n                </div>\r\n                <button className=\"btn btn-primary\">Submit</button>\r\n              </form>\r\n              <br />\r\n              <form onSubmit={updateItem}>\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">Update Item</label>\r\n                  <select\r\n                    placeholder=\"Item id\"\r\n                    className=\"form-control\"\r\n                    required\r\n                    id=\"itemId\"\r\n                  >\r\n                    {dropdown}\r\n                  </select>\r\n                  <input\r\n                    placeholder=\"Item Metadata ipfs://\"\r\n                    className=\"form-control\"\r\n                    required\r\n                    id=\"updateMetadata\"\r\n                  />\r\n                </div>\r\n                <button\r\n                  // type=\"button\"\r\n                  className=\"btn btn-primary\"\r\n                >\r\n                  Submit\r\n                </button>\r\n              </form>\r\n              <hr></hr>\r\n              <form onSubmit={create} encType=\"multipart/form-data\">\r\n                <label className=\"form-label\">Create Item</label> <br />\r\n                <input type=\"file\" id=\"itemImage\" name=\"image\" />\r\n                <input\r\n                  placeholder=\"Name\"\r\n                  className=\"form-control\"\r\n                  required\r\n                  id=\"itemName\"\r\n                />\r\n                <input\r\n                  placeholder=\"Description\"\r\n                  className=\"form-control\"\r\n                  required\r\n                  id=\"itemDescription\"\r\n                />\r\n                <button className=\"btn btn-primary\">Submit</button>\r\n              </form>\r\n            </div>\r\n            <div className=\"col-md-7\">\r\n              <label>Items</label>\r\n              <MaterialStory\r\n                columns={columns}\r\n                data={itemRows}\r\n                pagination\r\n                fixedHeader\r\n                fixedHeaderScrollHeight=\"300px\"\r\n                highlightOnHover\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        alert(errormsg)\r\n      )}\r\n      {loading ? (\r\n        <div className=\"loading\">\r\n          <img src=\"/loading.gif\" />\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport abi from \"../abi/auctionabi.json\";\r\nimport nftAbi from \"../abi/itemabi.json\";\r\nimport coinAbi from \"../abi/coinabi.json\";\r\nimport Web3 from \"web3\";\r\nimport detectEthereumProvider from \"@metamask/detect-provider\";\r\n\r\nconst REACT_APP_CONTRACT_ADDRESS = \"0xDEDfb6398DB752cB991905be918412d7C5F25f1c\";\r\nconst nftContractAddress = \"0x95085af0eae3f64786b695c172afed8819bdc22c\";\r\nconst coinContractAddress = \"0x2a1f1d742e60c20dcc4e6e02d52c41243b4076cc\";\r\nconst SELECTEDNETWORK = \"80001\";\r\nconst SELECTEDNETWORKNAME = \"Polygon Testnet\";\r\n\r\nlet web3, metaMaskAccount, ct, nftCt, coinCt;\r\n\r\nexport default function CreateAuction() {\r\n  const [errormsg, setErrorMsg] = useState(false);\r\n  const [dropdown, setDropdown] = useState(0);\r\n\r\n  useEffect(async () => {\r\n    if (await detectEthereumProvider()) {\r\n      // setProvider(true);\r\n      window.web3 = new Web3(window.ethereum);\r\n      await window.ethereum.enable();\r\n      web3 = window.web3;\r\n\r\n      metaMaskAccount = await web3.eth.getAccounts();\r\n      metaMaskAccount = metaMaskAccount[0];\r\n\r\n      if ((await web3.eth.net.getId()) == SELECTEDNETWORK) {\r\n        ct = await new web3.eth.Contract(abi, REACT_APP_CONTRACT_ADDRESS);\r\n        nftCt = await new web3.eth.Contract(nftAbi, nftContractAddress);\r\n        coinCt = await new web3.eth.Contract(coinAbi, coinContractAddress);\r\n\r\n        let total = await nftCt.methods.totalSupply().call();\r\n        let ItemOption = [];\r\n\r\n        ItemOption.push(\r\n          <option disabled selected value=\"\">\r\n            Select NFT Id\r\n          </option>\r\n        );\r\n\r\n        for (let k = 1; k <= total; k++) {\r\n          ItemOption.push(\r\n            <option key={k} value={k}>\r\n              {k}\r\n            </option>\r\n          );\r\n        }\r\n        setDropdown(ItemOption);\r\n        if ((await nftCt.methods.owner().call()) != metaMaskAccount)\r\n          setErrorMsg(\"Connect with owner wallet to continue\");\r\n      } else {\r\n        setErrorMsg('Select \"' + SELECTEDNETWORKNAME + '\" network to continue');\r\n      }\r\n    } else {\r\n      setErrorMsg(\r\n        \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\r\n      );\r\n      // setProvider(false);\r\n    }\r\n    if (window.ethereum) {\r\n      handleEthereum();\r\n    } else {\r\n      window.addEventListener(\"ethereum#initialized\", handleEthereum, {\r\n        once: true,\r\n      });\r\n      setTimeout(handleEthereum, 10000);\r\n    }\r\n\r\n    function handleEthereum() {\r\n      const { ethereum } = window;\r\n      if (ethereum && ethereum.isMetaMask) {\r\n        console.log(\"Ethereum successfully detected!\");\r\n        // setProvider(true);\r\n      } else {\r\n        setErrorMsg(\"Please install MetaMask!\");\r\n        // setProvider(false);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const createAuction = async (event) => {\r\n    event.preventDefault();\r\n    let itemId = document.getElementById(\"itemId\").value;\r\n    let minBidPrice = document.getElementById(\"minBidPrice\").value;\r\n    let auctionEndDate = document.getElementById(\"auctionEndDate\").value;\r\n    auctionEndDate = Math.floor(new Date(auctionEndDate).valueOf() / 1000);\r\n    console.log(auctionEndDate);\r\n    await ct.methods\r\n      .createAuction(\r\n        String(itemId),\r\n        String(minBidPrice),\r\n        String(auctionEndDate)\r\n      )\r\n      .send({ from: metaMaskAccount });\r\n  };\r\n\r\n  // const updateItem = async (event) => {\r\n  //   event.preventDefault();\r\n  //   let metadata = document.getElementById(\"updateMetadata\").value;\r\n  //   let id = document.getElementById(\"itemId\").value;\r\n\r\n  //   await ct.methods\r\n  //     .updateITEM(id, metadata)\r\n  //     .send({ from: metaMaskAccount, value: 0 });\r\n  // };\r\n\r\n  return (\r\n    <>\r\n      {!errormsg ? (\r\n        <div className=\"container\">\r\n          <div className=\"row py-5\">\r\n            <div className=\"col-6\">\r\n              <form onSubmit={createAuction}>\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">Create an Auction</label>\r\n                  <select\r\n                    placeholder=\"Item id\"\r\n                    className=\"form-control\"\r\n                    required\r\n                    id=\"itemId\"\r\n                  >\r\n                    {dropdown}\r\n                  </select>\r\n                  <input\r\n                    placeholder=\"Minimum Bid Price\"\r\n                    className=\"form-control\"\r\n                    required\r\n                    id=\"minBidPrice\"\r\n                    type=\"number\"\r\n                  />\r\n                  <input\r\n                    placeholder=\"Auction End Date\"\r\n                    className=\"form-control\"\r\n                    required\r\n                    id=\"auctionEndDate\"\r\n                    type=\"date\"\r\n                  />\r\n                </div>\r\n                <button className=\"btn btn-primary\">Submit</button>\r\n              </form>\r\n            </div>\r\n            <div className=\"col-6\">\r\n              {/* <form onSubmit={updateItem}>\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">Update Item</label>\r\n                  <select\r\n                    placeholder=\"Item id\"\r\n                    className=\"form-control\"\r\n                    required\r\n                    id=\"itemId\"\r\n                  >\r\n                    {dropdown}\r\n                  </select>\r\n                  <input\r\n                    placeholder=\"Item Metadata ipfs://\"\r\n                    className=\"form-control\"\r\n                    required\r\n                    id=\"updateMetadata\"\r\n                  />\r\n                </div>\r\n                <button\r\n                  // type=\"button\"\r\n                  className=\"btn btn-primary\"\r\n                >\r\n                  Submit\r\n                </button>\r\n              </form> */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        alert(errormsg)\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import \"./Auctions.css\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport abi from \"../abi/auctionabi.json\";\r\nimport nftAbi from \"../abi/itemabi.json\";\r\nimport coinAbi from \"../abi/coinabi.json\";\r\nimport Web3 from \"web3\";\r\nimport detectEthereumProvider from \"@metamask/detect-provider\";\r\nimport DataTable from \"react-data-table-component\";\r\n\r\nconst REACT_APP_CONTRACT_ADDRESS = \"0xDEDfb6398DB752cB991905be918412d7C5F25f1c\";\r\nconst nftContractAddress = \"0xaE62E801988b3698c91FC39F95a68B9fb0AD4651\";\r\nconst coinContractAddress = \"0x8415Ea4719b7e0CAc256Cf66B076930E2cEA970B\";\r\nconst SELECTEDNETWORK = \"80001\";\r\nconst SELECTEDNETWORKNAME = \"Polygon Testnet\";\r\n\r\nlet web3, metaMaskAccount, ct, nftCt, coinCt;\r\n\r\nconst columns = [\r\n  {\r\n    name: \"Id\",\r\n    selector: (row) => row.id,\r\n    sortable: true,\r\n  },\r\n  {\r\n    name: \"Status\",\r\n    selector: (row) => row.status,\r\n  },\r\n  {\r\n    name: \"Bid Period\",\r\n    selector: (row) => row.auctionBidPeriod,\r\n  },\r\n  {\r\n    name: \"Highest Bid\",\r\n    selector: (row) => row.highestBid,\r\n  },\r\n  {\r\n    name: \"Highest Bidder\",\r\n    selector: (row) => row.highestBidder,\r\n  },\r\n];\r\n\r\nexport default function Auctions() {\r\n  const [errormsg, setErrorMsg] = useState(false);\r\n  const [dropdown, setDropdown] = useState(0);\r\n  const [auctionRows, setAuctionRows] = useState();\r\n\r\n  useEffect(async () => {\r\n    if (await detectEthereumProvider()) {\r\n      window.web3 = new Web3(window.ethereum);\r\n      await window.ethereum.enable();\r\n      web3 = window.web3;\r\n\r\n      metaMaskAccount = await web3.eth.getAccounts();\r\n      metaMaskAccount = metaMaskAccount[0];\r\n\r\n      if ((await web3.eth.net.getId()) == SELECTEDNETWORK) {\r\n        ct = await new web3.eth.Contract(abi, REACT_APP_CONTRACT_ADDRESS);\r\n        nftCt = await new web3.eth.Contract(nftAbi, nftContractAddress);\r\n        coinCt = await new web3.eth.Contract(coinAbi, coinContractAddress);\r\n\r\n        if ((await nftCt.methods.owner().call()) != metaMaskAccount)\r\n          setErrorMsg(\"Connect with owner wallet to continue\");\r\n\r\n        let indexforQuery = await ct.methods.getc().call();\r\n        let a = [];\r\n        let b = [];\r\n\r\n        for (let i = 0; i < indexforQuery.length; i++) {\r\n          a.push(await ct.methods.Auctions(indexforQuery[i]).call());\r\n          let c = new Date(a[i].expiresAt * 1000);\r\n          b.push({\r\n            id: indexforQuery[i],\r\n            status: a[i].auctionEnd ? \"Active\" : \"Ended\",\r\n            auctionBidPeriod: c.toUTCString(),\r\n            highestBid: a[i].highestBid,\r\n            highestBidder: a[i].highestBidder,\r\n          });\r\n          setAuctionRows(b);\r\n        }\r\n        setAuctionRows(b);\r\n      } else {\r\n        setErrorMsg('Select \"' + SELECTEDNETWORKNAME + '\" network to continue');\r\n      }\r\n    } else {\r\n      setErrorMsg(\r\n        \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\r\n      );\r\n      // setProvider(false);\r\n    }\r\n    if (window.ethereum) {\r\n      handleEthereum();\r\n    } else {\r\n      window.addEventListener(\"ethereum#initialized\", handleEthereum, {\r\n        once: true,\r\n      });\r\n      setTimeout(handleEthereum, 10000);\r\n    }\r\n\r\n    function handleEthereum() {\r\n      const { ethereum } = window;\r\n      if (ethereum && ethereum.isMetaMask) {\r\n        console.log(\"Ethereum successfully detected!\");\r\n        // setProvider(true);\r\n      } else {\r\n        setErrorMsg(\"Please install MetaMask!\");\r\n        // setProvider(false);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-12\">\r\n          <h3 className=\"py-3\">Overview</h3>\r\n          <div className=\"tableDiv\">\r\n            {/* <table id=\"myTable\" class=\"display \">\r\n              <thead>\r\n                <tr>\r\n                  <th>Id</th>\r\n                  <th>Name</th>\r\n                  <th>Highest Bid</th>\r\n                  <th>End Date</th>\r\n                  <th>Highest Bid Address</th>\r\n                  <th>Status</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>{auctionRows}</tbody>\r\n            </table> */}\r\n            <DataTable\r\n              columns={columns}\r\n              data={auctionRows}\r\n              pagination\r\n              fixedHeader\r\n              fixedHeaderScrollHeight=\"300px\"\r\n              highlightOnHover\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n// import Mintbtn from \"./mintbtn\";\r\n\r\nexport default function Home() {\r\n  return <h1>Home</h1>;\r\n}\r\n","import \"./viewauctions.css\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport abi from \"../abi/auctionabi.json\";\r\nimport nftAbi from \"../abi/itemabi.json\";\r\nimport coinAbi from \"../abi/coinabi.json\";\r\nimport Web3 from \"web3\";\r\nimport detectEthereumProvider from \"@metamask/detect-provider\";\r\nimport DataTable from \"react-data-table-component\";\r\n\r\nconst REACT_APP_CONTRACT_ADDRESS = \"0xDEDfb6398DB752cB991905be918412d7C5F25f1c\";\r\nconst nftContractAddress = \"0xaE62E801988b3698c91FC39F95a68B9fb0AD4651\";\r\nconst coinContractAddress = \"0x8415Ea4719b7e0CAc256Cf66B076930E2cEA970B\";\r\nconst SELECTEDNETWORK = \"80001\";\r\nconst SELECTEDNETWORKNAME = \"Polygon Testnet\";\r\n\r\nlet web3, metaMaskAccount, ct, nftCt, coinCt;\r\n\r\nexport default function ViewAuctions() {\r\n  const [errormsg, setErrorMsg] = useState(false);\r\n  const [loadedItems, setLoadedItems] = useState();\r\n\r\n  useEffect(async () => {\r\n    if (await detectEthereumProvider()) {\r\n      window.web3 = new Web3(window.ethereum);\r\n      await window.ethereum.enable();\r\n      web3 = window.web3;\r\n\r\n      metaMaskAccount = await web3.eth.getAccounts();\r\n      metaMaskAccount = metaMaskAccount[0];\r\n\r\n      if ((await web3.eth.net.getId()) == SELECTEDNETWORK) {\r\n        ct = await new web3.eth.Contract(abi, REACT_APP_CONTRACT_ADDRESS);\r\n        nftCt = await new web3.eth.Contract(nftAbi, nftContractAddress);\r\n        // coinCt = await new web3.eth.Contract(coinAbi, coinContractAddress);\r\n\r\n        if ((await nftCt.methods.owner().call()) != metaMaskAccount)\r\n          setErrorMsg(\"Connect with owner wallet to continue\");\r\n\r\n        let indexforQuery = await ct.methods.getc().call();\r\n        let a = [];\r\n        let b = [];\r\n\r\n        for (let i = 0; i < indexforQuery.length; i++) {\r\n          a.push(await ct.methods.Auctions(indexforQuery[i]).call());\r\n          //   let c = new Date(a[i].expiresAt * 1000);\r\n          b.push(<div className=\"col-md-4\"></div>);\r\n          console.log(\r\n            fetch(await nftCt.methods.tokenURI(indexforQuery[i]).call())\r\n          );\r\n          setLoadedItems(b);\r\n        }\r\n        setLoadedItems(b);\r\n      } else {\r\n        setErrorMsg('Select \"' + SELECTEDNETWORKNAME + '\" network to continue');\r\n      }\r\n    } else {\r\n      setErrorMsg(\r\n        \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\r\n      );\r\n      // setProvider(false);\r\n    }\r\n    if (window.ethereum) {\r\n      handleEthereum();\r\n    } else {\r\n      window.addEventListener(\"ethereum#initialized\", handleEthereum, {\r\n        once: true,\r\n      });\r\n      setTimeout(handleEthereum, 10000);\r\n    }\r\n\r\n    function handleEthereum() {\r\n      const { ethereum } = window;\r\n      if (ethereum && ethereum.isMetaMask) {\r\n        console.log(\"Ethereum successfully detected!\");\r\n        // setProvider(true);\r\n      } else {\r\n        setErrorMsg(\"Please install MetaMask!\");\r\n        // setProvider(false);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-12\">\r\n          <h3 className=\"py-3\">Overview</h3>\r\n          <div className=\"row\">{loadedItems}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import \"./App.css\";\r\nimport Item from \"./Components/admin/item\";\r\nimport CreateAuction from \"./Components/admin/createauction\";\r\nimport Auction from \"./Components/admin/auctions\";\r\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\r\nimport Home from \"./Components/Home\";\r\nimport ViewAuctions from \"./Components/user/viewauctions\";\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <a href=\"/\">Home</a> &nbsp;\r\n        <a href=\"/items\">Items</a> &nbsp;\r\n        <a href=\"/auctions\">Auctions</a> &nbsp;\r\n        <a href=\"/createauctions\">Create Auctions</a> &nbsp;\r\n        <a href=\"/viewauctions\">View Auctions</a> &nbsp;\r\n      </div>\r\n      <BrowserRouter>\r\n        <Routes>\r\n          <Route exact path=\"/items\" element={<Item />} />\r\n          <Route exact path=\"/auctions\" element={<Auction />} />\r\n          <Route exact path=\"/createauctions\" element={<CreateAuction />} />\r\n          <Route exact path=\"/viewauctions\" element={<ViewAuctions />} />\r\n          <Route exact path=\"/\" element={<Home />} />\r\n        </Routes>\r\n      </BrowserRouter>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n// import \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}